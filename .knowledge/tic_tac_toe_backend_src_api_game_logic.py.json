{"is_source_file": true, "format": "Python", "description": "This file contains core game logic functions for a Tic Tac Toe game, including making moves and checking for a winner, tailored for a backend API.", "external_files": ["./models"], "external_methods": ["GameRoom", "GameState"], "published": ["make_move", "check_winner"], "classes": [], "methods": [{"name": "GameState make_move(game: GameRoom, username: str, row: int, col: int)", "description": "Attempts to execute a player's move on the board, updates game state, checks for win/draw, and returns the new game state or raises errors for invalid actions.", "scope": "", "scopeKind": ""}, {"name": "Tuple[Optional[str],bool] check_winner(board: list)", "description": "Analyzes the current board to determine if there is a winner or if the game has ended in a draw.", "scope": "", "scopeKind": ""}], "calls": ["check_winner"], "search-terms": ["game logic", "tic tac toe", "move making", "winner detection", "board validation"], "state": 2, "file_id": 7, "knowledge_revision": 16, "git_revision": "", "ctags": [{"_type": "tag", "name": "check_winner", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-b1e18689/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def check_winner(board: list) -> Tuple[Optional[str], bool]:$/", "language": "Python", "typeref": "typename:Tuple[Optional[str],bool]", "kind": "function", "signature": "(board: list)"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/online-tic-tac-toe-platform-b1e18689/tic_tac_toe_backend/src/api/game_logic.py", "pattern": "/^def make_move(game: GameRoom, username: str, row: int, col: int) -> GameState:$/", "language": "Python", "typeref": "typename:GameState", "kind": "function", "signature": "(game: GameRoom, username: str, row: int, col: int)"}], "hash": "c6ef2e8f930140b72449434c7c0be3d0", "format-version": 4, "code-base-name": "tic_tac_toe_backend", "filename": "tic_tac_toe_backend/src/api/game_logic.py", "revision_history": [{"16": ""}]}